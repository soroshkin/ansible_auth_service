- name: install postgresql repo
  yum:
    name: "{{ postgresql_repo_url }}"

- name: install postgresql
  yum: 
    name: "['{{ postgresql_version }}', 'python-psycopg2']"
    state: present
    allow_downgrade: yes

- name: check if postgresql db is initialized
  stat:
    path: "{{ postgresql_data_dir }}/PG_VERSION"
  register: pgdata_dir_version

- name: initialize database
  command: "{{ postgresql_bin_dir }}/{{ postgresql_setup_file }} initdb"
  when: not pgdata_dir_version.stat.exists
  no_log: false
  become: true
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true

- name: temporary grant access without password
  replace:
    regexp: "^local(.)*" 
    replace: "local all all trust"
    path: "{{ postgresql_data_dir }}/{{ hba_file_name }}"
  notify: restart postgresql

- name: allow postgres to accept connections from api servers
  lineinfile: 
    regex: "(.)*listen_addresses"
    line: "listen_addresses = '*'"
    path: "{{ postgresql_data_dir }}/{{ conf_file_name }}"
  notify: restart postgresql

- name: allow postgres to accept connections from api servers
  lineinfile: 
    regex: "(.)*(password_encryption)?"
    line: "password_encryption = scram-sha-256"
    path: "{{ postgresql_data_dir }}/{{ conf_file_name }}"
  notify: restart postgresql

- name: start postgres service
  systemd: 
    name: "{{ postgresql_service }}"
    state: started
    enabled: yes

- name: flush handlers
  meta: flush_handlers

- name: update postgres user password
  postgresql_user:
    name: "{{ postgres_default_user }}"
    password: "{{ postgres_default_user_password }}"
    login_user: "{{ postgres_default_user }}" 
    encrypted: yes
  no_log: true

- name: update postgres hba_file
  template: 
    src: "{{ role_path }}/templates/{{ hba_file_name }}"
    dest: "{{ postgresql_data_dir }}"
    mode: 0600
  become: yes
  become_user: "{{ postgres_default_user }}"
  notify: restart postgresql

- name: create new postgres user
  postgresql_user:
    name: "{{ postgresql_user }}"
    password: "{{ postgres_password }}"
    login_user: "{{ postgres_default_user }}"
    login_password: "{{ postgres_default_user_password }}"
    encrypted: yes
  no_log: true

- name: create new database
  postgresql_db:
    name: "{{ postgresql_db }}"
    login_user: "{{ postgres_default_user }}"
    login_password: "{{ postgres_default_user_password }}"
  no_log: true

- name: change {{ postgresql_user }} privileges
  postgresql_user:
    name: "{{ postgresql_user }}"
    db: "{{ postgresql_db }}"
    priv: "ALL"
    login_user: "{{ postgres_default_user }}"
    login_password: "{{ postgres_default_user_password }}"
    encrypted: yes
  no_log: true 

- name: flush handlers
  meta: flush_handlers

- name: install firewalld
  yum:
    name: firewalld
    state: present

- name: start firewalld
  systemd: 
    name: firewalld
    enabled: yes
    state: started

- name: add port to firewalld 
  firewalld: 
    port: "{{ postgres_port }}"
    state: enabled
    permanent: yes
    zone: public
  notify: reload firewalld
